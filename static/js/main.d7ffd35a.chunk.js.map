{"version":3,"sources":["components/Controls/Controls.js","components/TransactionHistory/TransactionHistory.js","components/Balance/Balance.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["Controls","handleChange","handleWithdraw","handleDeposit","className","type","name","onChange","placeholder","onClick","TransactionHistory","transactions","map","el","key","id","amount","date","Balance","balance","income","expenses","Dashboard","state","addToTransactions","newTransactions","uuid","Date","toLocaleString","setState","Number","toast","success","error","e","target","value","this","reduce","acc","items","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iTAyBeA,EAtBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,eAAgBC,EAAjC,EAAiCA,cAAjC,OACf,6BAASC,UAAU,YACjB,2BACEC,KAAK,SACLC,KAAK,SACLC,SAAUN,EACVO,YAAY,cAEd,4BAAQC,QAASN,EAAeE,KAAK,UAArC,WAGA,4BAAQI,QAASP,EAAgBG,KAAK,UAAtC,cCcWK,EAzBY,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OACzB,2BAAOP,UAAU,WACf,+BACE,4BACE,2CACA,sCACA,sCAGJ,+BACGO,EAAaC,KAAI,SAAAC,GAAE,OAClB,wBAAIC,IAAKD,EAAGE,IACV,4BAAKF,EAAGR,MACR,4BAAKQ,EAAGG,OAAR,KACA,4BAAKH,EAAGI,aCAHC,EAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,OAAQC,EAApB,EAAoBA,SAApB,OACd,6BAASjB,UAAU,WACjB,uCAAagB,EAAb,KACA,uCAAaC,EAAb,KACA,0CAAgBF,KCCCG,G,iNACnBC,MAAQ,CACNZ,aAAc,GACdQ,QAAS,EACTH,OAAQ,G,EAGVQ,kBAAoB,SAAAnB,GAAS,IACnBW,EAAW,EAAKO,MAAhBP,OACFS,EAAkB,CACtBV,GAAIW,MACJrB,OACAW,SACAC,MAAM,IAAIU,MAAOC,kBAEnB,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBZ,aAAa,GAAD,mBAAMY,EAAMZ,cAAZ,CAA0Bc,S,EAI1CtB,cAAgB,WACY,IAAtB,EAAKoB,MAAMP,QACb,EAAKa,UAAS,SAAAN,GAAK,MAAK,CACtBJ,QAASW,OAAOP,EAAMJ,SAAWW,OAAOP,EAAMP,YAEhD,EAAKQ,kBAAkB,YAEvBO,IAAMC,QAAQ,gN,EAIlB9B,eAAiB,WACX,EAAKqB,MAAMJ,SAAW,EAAKI,MAAMP,QAAiC,IAAvB,EAAKO,MAAMJ,SACxD,EAAKU,UAAS,SAAAN,GAAK,MAAK,CACtBJ,QAASI,EAAMJ,QAAUI,EAAMP,WAEjC,EAAKQ,kBAAkB,aAEvBO,IAAME,MAAM,sS,EAIhBhC,aAAe,SAAAiC,GAAM,IAAD,EACMA,EAAEC,OAAlB7B,EADU,EACVA,KAAM8B,EADI,EACJA,MACd,EAAKP,SAAL,eAAiBvB,GAAQ8B,K,wEAGjB,IAAD,EAC2BC,KAAKd,MAA/BJ,EADD,EACCA,QAASR,EADV,EACUA,aACXS,EAAST,EAAa2B,QAAO,SAACC,EAAKC,GACvC,MAAsB,YAAfA,EAAMnC,KAAqBkC,EAAMC,EAAMxB,OAASuB,IACtD,GACGlB,EAAWV,EAAa2B,QAAO,SAACC,EAAKC,GACzC,MAAsB,aAAfA,EAAMnC,KAAsBkC,EAAMC,EAAMxB,OAASuB,IACvD,GAEH,OACE,6BACE,kBAAC,EAAD,CACErC,eAAgBmC,KAAKnC,eACrBC,cAAekC,KAAKlC,cACpBF,aAAcoC,KAAKpC,eAErB,kBAAC,EAAD,CAASkB,QAASA,EAASC,OAAQA,EAAQC,SAAUA,IACrD,kBAAC,EAAD,CAAoBV,aAAcA,IAClC,kBAAC,IAAD,W,GAjE+B8B,cCCxBC,EANH,kBACV,oCACE,kBAAC,EAAD,QCDJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d7ffd35a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Controls = ({ handleChange, handleWithdraw, handleDeposit }) => (\n  <section className=\"controls\">\n    <input\n      type=\"number\"\n      name=\"amount\"\n      onChange={handleChange}\n      placeholder=\"Enter sum\"\n    />\n    <button onClick={handleDeposit} type=\"button\">\n      Deposit\n    </button>\n    <button onClick={handleWithdraw} type=\"button\">\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleWithdraw: PropTypes.func.isRequired,\n  handleDeposit: PropTypes.func.isRequired,\n};\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className=\"history\">\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(el => (\n        <tr key={el.id}>\n          <td>{el.type}</td>\n          <td>{el.amount}$</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Balance = ({ balance, income, expenses }) => (\n  <section className=\"balance\">\n    <span>&uarr;{income}$</span>\n    <span>&darr;{expenses}$</span>\n    <span>Balance: {balance}</span>\n  </section>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React, { Component } from 'react';\nimport uuid from 'uuid/v1';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Controls from '../Controls/Controls';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport Balance from '../Balance/Balance';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    amount: 0,\n  };\n\n  addToTransactions = type => {\n    const { amount } = this.state;\n    const newTransactions = {\n      id: uuid(),\n      type,\n      amount,\n      date: new Date().toLocaleString(),\n    };\n    this.setState(state => ({\n      transactions: [...state.transactions, newTransactions],\n    }));\n  };\n\n  handleDeposit = () => {\n    if (this.state.amount !== 0) {\n      this.setState(state => ({\n        balance: Number(state.balance) + Number(state.amount),\n      }));\n      this.addToTransactions('DEPOSIT');\n    } else {\n      toast.success('Введите сумму для проведения операции!');\n    }\n  };\n\n  handleWithdraw = () => {\n    if (this.state.balance >= this.state.amount && this.state.balance !== 0) {\n      this.setState(state => ({\n        balance: state.balance - state.amount,\n      }));\n      this.addToTransactions('WITHDRAW');\n    } else {\n      toast.error('На счету недостаточно средств для проведения операции!');\n    }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: +value });\n  };\n\n  render() {\n    const { balance, transactions } = this.state;\n    const income = transactions.reduce((acc, items) => {\n      return items.type === 'DEPOSIT' ? acc + items.amount : acc;\n    }, 0);\n    const expenses = transactions.reduce((acc, items) => {\n      return items.type === 'WITHDRAW' ? acc + items.amount : acc;\n    }, 0);\n\n    return (\n      <div>\n        <Controls\n          handleWithdraw={this.handleWithdraw}\n          handleDeposit={this.handleDeposit}\n          handleChange={this.handleChange}\n        />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nconst App = () => (\n  <>\n    <Dashboard />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}